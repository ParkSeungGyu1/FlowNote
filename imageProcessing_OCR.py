# -*- coding: utf-8 -*-
"""easyOCR_project (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jAMnyUX63RmH6gCAwTe9GEiGrO0xJTmO
"""

!pip install easyocr

import cv2
import numpy as np
import easyocr
import matplotlib.pyplot as plt
from PIL import ImageFont, ImageDraw, Image
from google.colab import files

#src is gray scale of image
image_path = cv2.imread('/content/손글씨.jpeg')
image = cv2.imread('/content/손글씨.jpeg')
# 전처리: 그레이스케일 변환 (Optional)
src = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

reader = easyocr.Reader(['en', 'ko'])
result =  reader.readtext(image)

# Colab에 폰트 파일 업로드
print("폰트 파일을 업로드하세요 (예: NanumGothic-Bold.ttf)")
uploaded_font = files.upload()
font_path = list(uploaded_font.keys())[0]  # 업로드된 폰트 파일 경로
print(f"업로드된 폰트: {font_path}")

# OpenCV 이미지를 PIL 이미지로 변환
image_pil = Image.fromarray(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
draw = ImageDraw.Draw(image_pil)

# 폰트 설정
font = ImageFont.truetype(font_path, 25)

# 텍스트 및 경계 상자 표시
for detection in result:
    coords, text, confidence = detection  # 결과를 분리
    x_min, y_min = map(int, coords[0])  # 좌표 정수 변환
    x_max, y_max = map(int, coords[2])

    # 경계 상자 그리기
    draw.rectangle(((x_min, y_min), (x_max, y_max)), outline="skyblue", width=2)

    # 텍스트 추가
    draw.text((x_min, y_min - 20), text, font=font, fill="black")

# 결과 시각화
plt.figure(figsize=(20, 20))
plt.imshow(np.asarray(image_pil))
plt.axis('off')
plt.show()

